"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5882],{3023:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>o});var a=n(3696);const s={},r=a.createContext(s);function i(e){const t=a.useContext(r);return a.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),a.createElement(r.Provider,{value:t},e.children)}},8007:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>p,frontMatter:()=>i,metadata:()=>a,toc:()=>d});const a=JSON.parse('{"id":"going-deeper/file-storage","title":"File Storage","description":"Pashmak uses neko-storage module to manage files. Currently there is implementation for local file system and AWS-S3.","source":"@site/docs/going-deeper/file-storage.md","sourceDirName":"going-deeper","slug":"/going-deeper/file-storage","permalink":"/pashmak/docs/going-deeper/file-storage","draft":false,"unlisted":false,"editUrl":"https://github.com/devbro1/pashmak/blob/master/docs/docs/going-deeper/file-storage.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"Email","permalink":"/pashmak/docs/going-deeper/email"},"next":{"title":"Helpers","permalink":"/pashmak/docs/going-deeper/helper"}}');var s=n(2540),r=n(3023);const i={sidebar_position:3},o="File Storage",l={},d=[{value:"Configuration",id:"configuration",level:2},{value:"Managing Files",id:"managing-files",level:2},{value:"exists(path)",id:"existspath",level:3},{value:"put(path, content)",id:"putpath-content",level:3},{value:"metadata(path)",id:"metadatapath",level:3},{value:"getString(path), getJson(path), getBuffer(path), getStream(path)",id:"getstringpath-getjsonpath-getbufferpath-getstreampath",level:3},{value:"delete(path)",id:"deletepath",level:3},{value:"Registering your own Provider",id:"registering-your-own-provider",level:2}];function g(e){const t={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"file-storage",children:"File Storage"})}),"\n",(0,s.jsxs)(t.p,{children:["Pashmak uses ",(0,s.jsx)(t.code,{children:"neko-storage"})," module to manage files. Currently there is implementation for local file system and AWS-S3."]}),"\n",(0,s.jsx)(t.h2,{id:"configuration",children:"Configuration"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-javascript",children:'import path from "path";\nimport os from "os";\n\nexport default {\n  engine: "local",\n  basePath: path.join("../storage", "/app-storage/"),\n};\n\nexport const temp = {\n  engine: "local",\n  basePath: path.join(os.tmpdir(), `temp_dir/${randomUUID()}`),\n}\n\nexport const qa_s3 = {\n  engine: "s3",\n  basePath: \'/\',\n  bucket: \'qa-team-bucket\',\n  s3Config: { // use a S3ClientConfig to fill this parameter\n    ???\n  };\n}\n'})}),"\n",(0,s.jsx)(t.p,{children:"you can then access your drivers as wanted:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-javascript",children:'import { storage } from "@root/facade";\n\nstorage().get("testfile.txt"); // uses default\nstorage("temp").get("testfile.txt"); // uses temp file system\nstorage("qa_s3").get("testfile.txt"); // uses qa_s3 storage, which is a AWS-S3\n'})}),"\n",(0,s.jsx)(t.h2,{id:"managing-files",children:"Managing Files"}),"\n",(0,s.jsx)(t.h3,{id:"existspath",children:"exists(path)"}),"\n",(0,s.jsx)(t.p,{children:"to see if a file exists in the storage"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-ts",children:'await storage().exists("path/to/test.txt");\n'})}),"\n",(0,s.jsx)(t.h3,{id:"putpath-content",children:"put(path, content)"}),"\n",(0,s.jsx)(t.p,{children:"to add a new file or override an existing file.\nthis method will not throw an error on overriding existing file, make sure you use exists() if case you are worried about existing file."}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-ts",children:'await storage().put("test.txt", "hello world");\n'})}),"\n",(0,s.jsx)(t.p,{children:"content can be string, object, Stream or Buffer."}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-ts",children:'await storage().put("test.txt", "hello world");\nawait storage().put("test.json", { message: "hello world" });\nawait storage().put("test.jpg", fs.readFileSync("path/to/file.jpg")); // Buffer\nawait storage().put("test.jpg", createReadStream("./example.txt")); // ReadStream\n'})}),"\n",(0,s.jsx)(t.h3,{id:"metadatapath",children:"metadata(path)"}),"\n",(0,s.jsx)(t.p,{children:"sometime you need details of the file"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-ts",children:'await storage().metadata("test.jpg");\n'})}),"\n",(0,s.jsx)(t.p,{children:"the return will look like:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-ts",children:'{\n    "size": 97511,\n    "mimeType": "image/jpeg",\n    "lastModifiedDate": "2025-05-25T22:01:27.625Z"\n}\n'})}),"\n",(0,s.jsx)(t.p,{children:"depending on the driver you may end up with more or less data."}),"\n",(0,s.jsx)(t.h3,{id:"getstringpath-getjsonpath-getbufferpath-getstreampath",children:"getString(path), getJson(path), getBuffer(path), getStream(path)"}),"\n",(0,s.jsx)(t.p,{children:"Depending on your need a few different methods are provided to help getting the file content."}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-ts",children:'await storage().getString("test.txt"); // string\nawait storage().getJson("test.json"); // json object\nawait storage().getBuffer("test.jpg"); // Buffer\nawait storage().getStream("test.jpg"); // stream\n\n// to send stream as a response\n(await storage().getStream("test.jpg")).pipe(res);\n'})}),"\n",(0,s.jsx)(t.h3,{id:"deletepath",children:"delete(path)"}),"\n",(0,s.jsx)(t.p,{children:"to delete an existing file. It will return true on success and false on failure.\nif false is returned, it can be either because file did not exists, or delete process failed for some other reason."}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-ts",children:'await storage().delete("path/to/file.txt");\n'})}),"\n",(0,s.jsx)(t.h2,{id:"registering-your-own-provider",children:"Registering your own Provider"}),"\n",(0,s.jsx)(t.p,{children:"TODO: add how to do it"})]})}function p(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(g,{...e})}):g(e)}}}]);