"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[444],{1380:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>u,frontMatter:()=>d,metadata:()=>i,toc:()=>o});const i=JSON.parse('{"id":"database/db_migration","title":"Migration","description":"TODO: ????","source":"@site/docs/database/db_migration.md","sourceDirName":"database","slug":"/database/db_migration","permalink":"/pashmak/docs/database/db_migration","draft":false,"unlisted":false,"editUrl":"https://github.com/devbro1/pashmak/blob/master/docs/docs/database/db_migration.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Setup Database","permalink":"/pashmak/docs/database/db_setup"},"next":{"title":"DB and SQL","permalink":"/pashmak/docs/database/db_sql"}}');var t=a(2540),s=a(3023);const d={sidebar_position:2},r="Migration",l={},o=[{value:"Creating new table",id:"creating-new-table",level:2},{value:"Columns",id:"columns",level:3},{value:"Foreign Key",id:"foreign-key",level:3},{value:"Indexes",id:"indexes",level:3},{value:"Basic Index",id:"basic-index",level:4},{value:"Unique Indexes",id:"unique-indexes",level:4},{value:"Composite Indexes",id:"composite-indexes",level:4},{value:"Custom Index Types",id:"custom-index-types",level:4},{value:"Adding Indexes in Migrations",id:"adding-indexes-in-migrations",level:3}];function c(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"migration",children:"Migration"})}),"\n",(0,t.jsx)(n.p,{children:"TODO: ????"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:'  async up(schema: Schema) {\n    await schema.createTable("orders", (blueprint: Blueprint) => {\n      blueprint.id();\n      blueprint.timestamps();\n      blueprint.integer("customer_id");\n      blueprint.foreign("customer_id")\n        .references("id")\n        .on("users")\n        .onDelete("cascade")\n        .onUpdate("cascade");\n    });\n  }\n'})}),"\n",(0,t.jsx)(n.h2,{id:"creating-new-table",children:"Creating new table"}),"\n",(0,t.jsx)(n.h3,{id:"columns",children:"Columns"}),"\n",(0,t.jsx)(n.h3,{id:"foreign-key",children:"Foreign Key"}),"\n",(0,t.jsx)(n.h3,{id:"indexes",children:"Indexes"}),"\n",(0,t.jsx)(n.p,{children:"You can add indexes to your tables for better query performance:"}),"\n",(0,t.jsx)(n.h4,{id:"basic-index",children:"Basic Index"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:'await schema.createTable("users", (table: Blueprint) => {\n  table.id();\n  table.string("email");\n  table.string("username");\n\n  // Create basic index\n  table.index("email");\n\n  // Create named index\n  table.index("username", "idx_username");\n});\n'})}),"\n",(0,t.jsx)(n.h4,{id:"unique-indexes",children:"Unique Indexes"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:'await schema.createTable("users", (table: Blueprint) => {\n  table.id();\n  table.string("email");\n\n  // Create unique index\n  table.unique("email");\n\n  // Create named unique index\n  table.unique("email", "unique_user_email");\n});\n'})}),"\n",(0,t.jsx)(n.h4,{id:"composite-indexes",children:"Composite Indexes"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:'await schema.createTable("users", (table: Blueprint) => {\n  table.id();\n  table.string("first_name");\n  table.string("last_name");\n\n  // Create composite index on multiple columns\n  table.index(["first_name", "last_name"]);\n\n  // Create named composite index\n  table.index(["first_name", "last_name"], "idx_full_name");\n});\n'})}),"\n",(0,t.jsx)(n.h4,{id:"custom-index-types",children:"Custom Index Types"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:'await schema.createTable("posts", (table: Blueprint) => {\n  table.id();\n  table.text("content");\n\n  // Create index with specific type (useful for PostgreSQL)\n  table.index("content").type("gin");\n});\n'})}),"\n",(0,t.jsx)(n.h3,{id:"adding-indexes-in-migrations",children:"Adding Indexes in Migrations"}),"\n",(0,t.jsx)(n.p,{children:"You can also add indexes when altering existing tables:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:'await schema.alterTable("users", (table: Blueprint) => {\n  // Add new column with index\n  table.string("phone");\n  table.index("phone");\n\n  // Add unique constraint to existing column\n  table.unique("email", "unique_email_constraint");\n});\n'})})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},3023:(e,n,a)=>{a.d(n,{R:()=>d,x:()=>r});var i=a(3696);const t={},s=i.createContext(t);function d(e){const n=i.useContext(s);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:d(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);