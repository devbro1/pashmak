"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5935],{2163:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>o,contentTitle:()=>n,default:()=>u,frontMatter:()=>d,metadata:()=>a,toc:()=>l});const a=JSON.parse('{"id":"tutorial-extras/middlewares","title":"Middleware","description":"TODO: ????","source":"@site/docs/tutorial-extras/middlewares.md","sourceDirName":"tutorial-extras","slug":"/tutorial-extras/middlewares","permalink":"/pashmak/docs/tutorial-extras/middlewares","draft":false,"unlisted":false,"editUrl":"https://github.com/devbro1/pashmak/blob/master/docs/docs/tutorial-extras/middlewares.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"Middlewares","permalink":"/pashmak/docs/tutorial-extras/db_migration"},"next":{"title":"Loggers","permalink":"/pashmak/docs/tutorial-extras/logger"}}');var i=t(2540),s=t(3023);const d={sidebar_position:3},n="Middleware",o={},l=[{value:"types of middleware",id:"types-of-middleware",level:2},{value:"functional middlewares",id:"functional-middlewares",level:3},{value:"Middleware Class",id:"middleware-class",level:3},{value:"Middleware Object",id:"middleware-object",level:3},{value:"order of middleware execution",id:"order-of-middleware-execution",level:2}];function c(e){const r={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(r.header,{children:(0,i.jsx)(r.h1,{id:"middleware",children:"Middleware"})}),"\n",(0,i.jsx)(r.p,{children:"TODO: ????"}),"\n",(0,i.jsx)(r.h2,{id:"types-of-middleware",children:"types of middleware"}),"\n",(0,i.jsx)(r.p,{children:"There are 3 types of middlewares you can create:"}),"\n",(0,i.jsx)(r.h3,{id:"functional-middlewares",children:"functional middlewares"}),"\n",(0,i.jsxs)(r.p,{children:["similar to expressjs middlewares they are just functions that are executed at each request.\nthe major point is you need to call ",(0,i.jsx)(r.code,{children:"await next()"}),", otherwise you can break the promise chain and cause unpredictable behaviors."]}),"\n",(0,i.jsx)(r.h3,{id:"middleware-class",children:"Middleware Class"}),"\n",(0,i.jsx)(r.p,{children:"it is a class definition that extends Middleware class. Everytime a request is processed, a new instance of this class is created before executing the middleware part.\nThis is ideal for when you need to run a middleware where it needs to track some data from before and acter controller execution per each request."}),"\n",(0,i.jsx)(r.h3,{id:"middleware-object",children:"Middleware Object"}),"\n",(0,i.jsx)(r.p,{children:"There may exists situations where you want to save performance and not instantiate on every request.\nor you want to be able to track data between requests."}),"\n",(0,i.jsx)(r.h2,{id:"order-of-middleware-execution",children:"order of middleware execution"}),"\n",(0,i.jsxs)(r.ol,{children:["\n",(0,i.jsx)(r.li,{children:"from global router"}),"\n",(0,i.jsx)(r.li,{children:"from class middlewares"}),"\n",(0,i.jsx)(r.li,{children:"from request method of controller class"}),"\n"]})]})}function u(e={}){const{wrapper:r}={...(0,s.R)(),...e.components};return r?(0,i.jsx)(r,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},3023:(e,r,t)=>{t.d(r,{R:()=>d,x:()=>n});var a=t(3696);const i={},s=a.createContext(i);function d(e){const r=a.useContext(s);return a.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function n(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:d(e.components),a.createElement(s.Provider,{value:r},e.children)}}}]);