"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[7917],{3007:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"tutorial-basics/Controller","title":"Controller","description":"Pashmak can accept both function and class controllers","source":"@site/docs/tutorial-basics/Controller.md","sourceDirName":"tutorial-basics","slug":"/tutorial-basics/Controller","permalink":"/pashmak/docs/tutorial-basics/Controller","draft":false,"unlisted":false,"editUrl":"https://github.com/devbro1/pashmak/blob/master/docs/docs/tutorial-basics/Controller.md","tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"sidebar_position":5},"sidebar":"tutorialSidebar","previous":{"title":"Router","permalink":"/pashmak/docs/tutorial-basics/Routing"},"next":{"title":"Start Your Server","permalink":"/pashmak/docs/tutorial-basics/start-your-server"}}');var s=t(2540),o=t(3023);const a={sidebar_position:5},i="Controller",l={},d=[{value:"order of middleware execution",id:"order-of-middleware-execution",level:3}];function c(e){const n={code:"code",h1:"h1",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"controller",children:"Controller"})}),"\n",(0,s.jsx)(n.p,{children:"Pashmak can accept both function and class controllers"}),"\n",(0,s.jsx)(n.h1,{id:"functional-controllers",children:"functional Controllers"}),"\n",(0,s.jsx)(n.h1,{id:"class-controllers",children:"Class Controllers"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:'import { db, storage, logger } from "@devbro/pashmak/facades";\nimport { ctx } from "@devbro/pashmak/context";\nimport {\n  Request,\n  Response,\n  Model,\n  Param,\n  ValidatedRequest,\n  BaseController,\n  Controller,\n  Get,\n  Post,\n} from "@devbro/pashmak/router";\n\n@Controller("/api/v1/cats", {\n  middlewares: [mid1, mid2],\n})\nexport class CatController extends BaseController {\n  @Get({ middlewares: [logResponseMiddleware] })\n  async show() {\n    const r = await db().runQuery({ sql: "select * from cats", bindings: [] });\n    return {\n      message: "GET cats",\n      data: r,\n    };\n  }\n\n  @Post()\n  async store() {\n    const req = ctx().get<Request>("request");\n    logger().info({ msg: "request details", body: req.body, files: req.files });\n\n    return "success";\n  }\n\n  @Put("/:id")\n  async update(@Param("id") id) {\n    return "success";\n  }\n\n  @Get({ path: "/file" })\n  async getFile() {\n    const res = ctx().get<Response>("response");\n    await res.writeHead(200, {\n      "Content-Type": "image/jpeg",\n    });\n\n    (await storage().getStream("test.jpg")).pipe(res);\n  }\n\n  @Get({ path: "/file-details" })\n  async getFileDetails() {\n    return await storage().metadata("test.jpg");\n  }\n\n  @Get({ path: "/:id/notes/:noteId" })\n  showById(@Param("noteId") noteId: string, @Param("id") id: string) {\n    return "notes";\n  }\n}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"order-of-middleware-execution",children:"order of middleware execution"}),"\n",(0,s.jsx)(n.p,{children:"the order is as followed:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"middleswares defined in router as globalmiddlewares"}),"\n",(0,s.jsx)(n.li,{children:"middlewares defined at controller class"}),"\n",(0,s.jsx)(n.li,{children:"middlewares defined at each method"}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},3023:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>i});var r=t(3696);const s={},o=r.createContext(s);function a(e){const n=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);